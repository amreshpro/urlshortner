{
  "swagger": "2.0",
  "info": {
    "title": "URL Shortener API",
    "description": "API for creating, managing, and tracking shortened URLs.",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "schemes": ["http"],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Registers a new user with the provided name, email, and password.",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object that needs to be registered",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login a user",
        "description": "Logs in a user with the provided email and password and returns a JWT token.",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful, returns JWT token"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "description": "Creates a new user in the system.",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by ID",
        "description": "Fetch user details by user ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to be fetched"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user details",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user by ID",
        "description": "Update the details of an existing user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to be updated"
          },
          {
            "name": "user",
            "in": "body",
            "description": "User object with updated details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user by ID",
        "description": "Deletes a user by user ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/urls": {
      "post": {
        "tags": ["URL Shortener"],
        "summary": "Create a shortened URL",
        "description": "Creates a shortened URL from a valid original URL. Optionally, a custom alias can be provided.",
        "parameters": [
          {
            "name": "url",
            "in": "body",
            "description": "Original URL and custom alias",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shortened URL created successfully",
            "schema": {
              "$ref": "#/definitions/Url"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": ["URL Shortener"],
        "summary": "Get all URLs for the authenticated user",
        "description": "Fetches all shortened URLs created by the authenticated user.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Limit number of URLs returned"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved URLs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Url"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/urls/{id}": {
      "get": {
        "tags": ["URL Shortener"],
        "summary": "Get URL by ID",
        "description": "Fetch a shortened URL by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the shortened URL"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved URL",
            "schema": {
              "$ref": "#/definitions/Url"
            }
          },
          "404": {
            "description": "URL not found"
          }
        }
      },
      "put": {
        "tags": ["URL Shortener"],
        "summary": "Update a shortened URL",
        "description": "Update the original URL, custom alias, or expiration date of a shortened URL.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the shortened URL"
          },
          {
            "name": "url",
            "in": "body",
            "description": "Updated URL data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "URL updated successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "URL not found"
          }
        }
      },
      "delete": {
        "tags": ["URL Shortener"],
        "summary": "Delete a shortened URL",
        "description": "Deletes a shortened URL.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the shortened URL"
          }
        ],
        "responses": {
          "200": {
            "description": "URL deleted successfully"
          },
          "404": {
            "description": "URL not found"
          }
        }
      }
    },
    "/urls/{id}/analytics": {
      "get": {
        "tags": ["URL Shortener"],
        "summary": "Get URL analytics",
        "description": "Fetches analytics data for the shortened URL, including access count, timestamp, and metadata.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the shortened URL"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved URL analytics",
            "schema": {
              "$ref": "#/definitions/Analytics"
            }
          },
          "404": {
            "description": "URL not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Url": {
      "type": "object",
      "properties": {
        "originalUrl": {
          "type": "string"
        },
        "shortenedUrl": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Analytics": {
      "type": "object",
      "properties": {
        "clickCount": {
          "type": "integer"
        },
        "lastAccessed": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}
